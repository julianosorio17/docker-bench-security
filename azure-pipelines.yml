# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: CmdLine@2
  inputs:
    script: |
      echo Write your commands here
      
      echo Hello world

      docker -v

      docker ps -a
      
      pwd
- task: Docker@2
  inputs:
    command: 'run'
    arguments: '-dit --name alpine alpine /bin/ash'

- task: CmdLine@2
  inputs:
    script: |
      sleep 10s
      docker ps -a
      sleep 15s
      docker ps -a  
- task: Docker@2
  inputs:
    command: 'run'
    arguments: '-it --net host --pid host --userns host --cap-add audit_control -e DOCKER_CONTENT_TRUST=$DOCKER_CONTENT_TRUST -v /etc:/etc:ro -v /lib/systemd/system:/lib/systemd/system:ro -v /usr/bin/containerd:/usr/bin/containerd:ro -v /usr/bin/runc:/usr/bin/runc:ro -v /usr/lib/systemd:/usr/lib/systemd:ro -v /var/lib:/var/lib:ro -v /var/run/docker.sock:/var/run/docker.sock:ro --label docker_bench_security docker/docker-bench-security'

